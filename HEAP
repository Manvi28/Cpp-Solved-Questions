#include <iostream>
using namespace std;
class heap{
    public:
    int size;
    int arr[100];
    heap()
    {
        arr[0]=-1;
        size=0;
    }
    void insertion(int val){
        size++;
        int idx=size;
        arr[idx]=val;
        while(idx>1){
            int parent=idx/2;
            if(arr[parent]<arr[idx]){
                swap(arr[parent],arr[idx]);
            }else{
                return;
            }
        }
    }
    void deletefromheap(){
        arr[1]=arr[size];
        size--;
        int i=1;
        while(i<size){
            int left=2*i;
            int right=2*i+1;
            if(left<size&&arr[left]>arr[i]){
                swap(arr[left],arr[i]);
                i=left;
            }else if(right<size && arr[right]>arr[i]){
                swap(arr[right],arr[i]);
                i=right;
            }else{
                return;
            }
        }
    }
    void print(){
    for(int i=1;i<=size;i++){
        cout<< arr[i]<<" " ;
    }cout<<endl;
}
};
void heapify(int arr[],int n,int i){
    int largest=i;
    int left=2*i;
    int right=2*i+1;
    if(left<n&&arr[left]>arr[largest]){
        largest=left;
    }
    if(right<n&&arr[right]>arr[largest]){
        largest=right;
    }
    if(largest!=i){
        swap(arr[largest],arr[i]);
        heapify(arr,n,largest);
    }
}
int main() {
   heap h;
   h.insertion(50);
   h.insertion(55);
   h.insertion(53);
   h.insertion(52);
   h.insertion(54);
   h.print();
   h.deletefromheap();
   h.print();
   h.deletefromheap();
   h.print();
   int arr[6]={-1,54,53,55,52,50};
   int n=5;
   for(int i=n/2;i>0;i--){
       heapify(arr,n,i);
   }
   cout<<"printing the array..."<<endl;
   for(int i=1;i<=n;i++){
       cout<<arr[i]<<" ";
   }cout<<endl;
    return 0;
}
