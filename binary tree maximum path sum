A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence at most once. Note that the path does not need to pass through the root.

The path sum of a path is the sum of the node's values in the path.

Given the root of a binary tree, return the maximum path sum of any non-empty path



class Solution {
   
public:
     int maxi = INT_MIN;
    int sum(TreeNode* root){
        if(!root) return 0;
        int lsum=0, rsum=0;
        lsum = max(0, sum(root->left));
        rsum = max(0, sum(root->right));

        maxi = max(maxi, lsum + rsum + root->val);
        return root->val + max(lsum,rsum);  // pass along the best-
                           // path to the node above for making the max sum.                       
    }

    int maxPathSum(TreeNode* root) {
        int ans = sum(root);
        return maxi;
    }
};
