https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/submissions/1458386543

Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level and alternate between).
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        queue<TreeNode*>q;
        q.push(root);
        vector<vector<int>>res;
        if(root==NULL){
            return res;
        }
        bool left=true;
        while(!q.empty()){
            int size=q.size();
            vector<int>ans(size);
            for(int i=0;i<size;i++){
                TreeNode* front=q.front();
                q.pop();
                int index=left?i:size-i-1;
                ans[index]=front->val;
                if(front->left){
                    q.push(front->left);
                }
                if(front->right){
                    q.push(front->right);
                }
            }
            left=!left;
           
                res.push_back(ans);
            
        }
        return res;
    }
};
