Given an m x n matrix, return all elements of the matrix in spiral order.

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int n = matrix.size();
        if (n == 0) return {};
        int m = matrix[0].size();
        
        int fi = 0;       
        int fj = 0;       
        int fi2 = n;      
        int fj2 = m;      
        vector<int> ans;
        
        while (true) {
            for (int j = fj; j < fj2; j++) {
                ans.push_back(matrix[fi][j]);
            }
            fi++;

            for (int i = fi; i < fi2; i++) {
                ans.push_back(matrix[i][fj2 - 1]);
            }
            fj2--;

            if (fi < fi2) {
                for (int j = fj2 - 1; j >= fj; j--) {
                    ans.push_back(matrix[fi2 - 1][j]);
                }
                fi2--;
            }

            if (fj < fj2) {
                for (int i = fi2 - 1; i >= fi; i--) {
                    ans.push_back(matrix[i][fj]);
                }
                fj++;
            }
            if(ans.size() == (n * m))
            return ans;
        }
        
    }
};
